<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_solve_root_8cpp_source" xml:lang="en-US">
<title>solveRoot.cpp</title>
Go to the documentation of this file.<programlisting linenumbering="unnumbered"><anchor xml:id="_solve_root_8cpp_source_1l00001"/>00001 <emphasis role="preprocessor">#include&#32;&quot;<link linkend="__my_sqr_equation_8h">MySqrEquation.h</link>&quot;</emphasis>
<anchor xml:id="_solve_root_8cpp_source_1l00002"/>00002 
<anchor xml:id="_solve_root_8cpp_source_1l00012"/>00012 
<anchor xml:id="_solve_root_8cpp_source_1l00013"/><link linkend="__my_sqr_equation_8h_1aab686ba65e0281b74d30841c2eae5667">00013</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_solve_root_8cpp_1aab686ba65e0281b74d30841c2eae5667">isRavno</link>(<emphasis role="keywordtype">double</emphasis>&#32;a,&#32;<emphasis role="keywordtype">double</emphasis>&#32;b)&#32;{
<anchor xml:id="_solve_root_8cpp_source_1l00014"/>00014 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(fabs(a-b)&#32;&lt;&#32;<link linkend="_consts_8h_1a3d8c24629d725b9ef8c238cf27c9b158">eps</link>);
<anchor xml:id="_solve_root_8cpp_source_1l00015"/>00015 }
<anchor xml:id="_solve_root_8cpp_source_1l00016"/>00016 
<anchor xml:id="_solve_root_8cpp_source_1l00025"/>00025 
<anchor xml:id="_solve_root_8cpp_source_1l00026"/><link linkend="__my_sqr_equation_8h_1aa183967a7a915749e9800658481403e8">00026</link> <emphasis role="keywordtype">bool</emphasis>&#32;<link linkend="_solve_root_8cpp_1aa183967a7a915749e9800658481403e8">isZero</link>(<emphasis role="keywordtype">double</emphasis>&#32;x)&#32;{
<anchor xml:id="_solve_root_8cpp_source_1l00027"/>00027 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;(fabs(x)&#32;&lt;&#32;<link linkend="_consts_8h_1a3d8c24629d725b9ef8c238cf27c9b158">eps</link>);
<anchor xml:id="_solve_root_8cpp_source_1l00028"/>00028 }
<anchor xml:id="_solve_root_8cpp_source_1l00029"/>00029 
<anchor xml:id="_solve_root_8cpp_source_1l00045"/>00045 
<anchor xml:id="_solve_root_8cpp_source_1l00046"/><link linkend="__my_sqr_equation_8h_1af3222f7c92ef73b804e5ee180655321f">00046</link> <emphasis role="keywordtype">short</emphasis>&#32;<link linkend="_solve_root_8cpp_1af3222f7c92ef73b804e5ee180655321f">solveLineRoot</link>(<emphasis role="keywordtype">double</emphasis>&#32;b,&#32;<emphasis role="keywordtype">double</emphasis>&#32;c,&#32;<emphasis role="keywordtype">double</emphasis>&#32;*&#32;x1)&#32;{
<anchor xml:id="_solve_root_8cpp_source_1l00047"/>00047 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_solve_root_8cpp_1aab686ba65e0281b74d30841c2eae5667">isRavno</link>(b,&#32;0))&#32;{
<anchor xml:id="_solve_root_8cpp_source_1l00048"/>00048 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_solve_root_8cpp_1aab686ba65e0281b74d30841c2eae5667">isRavno</link>(c,&#32;0))&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_consts_8h_1a34f6126547cfdaeca6fb82d45a97692aa743de4daeb9f9f3e81b105fff597d9fb">infRoot</link>;
<anchor xml:id="_solve_root_8cpp_source_1l00049"/>00049 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_consts_8h_1a34f6126547cfdaeca6fb82d45a97692aa8f818ec203c4dba4bf9ce44797e75fa1">noRoot</link>;
<anchor xml:id="_solve_root_8cpp_source_1l00050"/>00050 &#32;&#32;&#32;&#32;}
<anchor xml:id="_solve_root_8cpp_source_1l00051"/>00051 
<anchor xml:id="_solve_root_8cpp_source_1l00052"/>00052 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_solve_root_8cpp_source_1l00053"/>00053 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*x1&#32;=&#32;-c&#32;/&#32;b;
<anchor xml:id="_solve_root_8cpp_source_1l00054"/>00054 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_solve_root_8cpp_1aa183967a7a915749e9800658481403e8">isZero</link>(*x1))&#32;*x1&#32;=&#32;0;
<anchor xml:id="_solve_root_8cpp_source_1l00055"/>00055 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_consts_8h_1a34f6126547cfdaeca6fb82d45a97692aac73256ab8a96bd2ae8a6977e170e65fb">oneRoot</link>;
<anchor xml:id="_solve_root_8cpp_source_1l00056"/>00056 &#32;&#32;&#32;&#32;}
<anchor xml:id="_solve_root_8cpp_source_1l00057"/>00057 }
<anchor xml:id="_solve_root_8cpp_source_1l00058"/>00058 
<anchor xml:id="_solve_root_8cpp_source_1l00076"/>00076 
<anchor xml:id="_solve_root_8cpp_source_1l00077"/><link linkend="__my_sqr_equation_8h_1a0a5f0682bcb7948f315b84134029c99e">00077</link> <emphasis role="keywordtype">short</emphasis>&#32;<link linkend="_solve_root_8cpp_1a0a5f0682bcb7948f315b84134029c99e">solveRoot</link>(<emphasis role="keywordtype">double</emphasis>&#32;a,&#32;<emphasis role="keywordtype">double</emphasis>&#32;b,&#32;<emphasis role="keywordtype">double</emphasis>&#32;c,&#32;<emphasis role="keywordtype">double</emphasis>&#32;*&#32;x1,&#32;<emphasis role="keywordtype">double</emphasis>&#32;*&#32;x2)&#32;{
<anchor xml:id="_solve_root_8cpp_source_1l00078"/>00078 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_solve_root_8cpp_1aab686ba65e0281b74d30841c2eae5667">isRavno</link>(a,&#32;0))&#32;{
<anchor xml:id="_solve_root_8cpp_source_1l00079"/>00079 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_solve_root_8cpp_1af3222f7c92ef73b804e5ee180655321f">solveLineRoot</link>(b,&#32;c,&#32;x1);
<anchor xml:id="_solve_root_8cpp_source_1l00080"/>00080 &#32;&#32;&#32;&#32;}
<anchor xml:id="_solve_root_8cpp_source_1l00081"/>00081 
<anchor xml:id="_solve_root_8cpp_source_1l00082"/>00082 &#32;&#32;&#32;&#32;<emphasis role="keywordtype">double</emphasis>&#32;d&#32;=&#32;NAN,&#32;sqd&#32;=&#32;NAN;
<anchor xml:id="_solve_root_8cpp_source_1l00083"/>00083 
<anchor xml:id="_solve_root_8cpp_source_1l00084"/>00084 &#32;&#32;&#32;&#32;d&#32;=&#32;b&#32;*&#32;b&#32;-&#32;4&#32;*&#32;a&#32;*&#32;c;
<anchor xml:id="_solve_root_8cpp_source_1l00085"/>00085 
<anchor xml:id="_solve_root_8cpp_source_1l00086"/>00086 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(d&#32;&lt;&#32;0)&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_consts_8h_1a34f6126547cfdaeca6fb82d45a97692aa8f818ec203c4dba4bf9ce44797e75fa1">noRoot</link>;
<anchor xml:id="_solve_root_8cpp_source_1l00087"/>00087 
<anchor xml:id="_solve_root_8cpp_source_1l00088"/>00088 &#32;&#32;&#32;&#32;sqd&#32;=&#32;sqrt(d);
<anchor xml:id="_solve_root_8cpp_source_1l00089"/>00089 
<anchor xml:id="_solve_root_8cpp_source_1l00090"/>00090 &#32;&#32;&#32;&#32;*x1&#32;=&#32;(-b&#32;+&#32;sqd)&#32;/&#32;(2&#32;*&#32;a);
<anchor xml:id="_solve_root_8cpp_source_1l00091"/>00091 
<anchor xml:id="_solve_root_8cpp_source_1l00092"/>00092 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_solve_root_8cpp_1aa183967a7a915749e9800658481403e8">isZero</link>(*x1))&#32;*x1&#32;=&#32;0;
<anchor xml:id="_solve_root_8cpp_source_1l00093"/>00093 
<anchor xml:id="_solve_root_8cpp_source_1l00094"/>00094 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_solve_root_8cpp_1aab686ba65e0281b74d30841c2eae5667">isRavno</link>(d,&#32;0))&#32;&#32;{
<anchor xml:id="_solve_root_8cpp_source_1l00095"/>00095 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_consts_8h_1a34f6126547cfdaeca6fb82d45a97692aac73256ab8a96bd2ae8a6977e170e65fb">oneRoot</link>;
<anchor xml:id="_solve_root_8cpp_source_1l00096"/>00096 &#32;&#32;&#32;&#32;}
<anchor xml:id="_solve_root_8cpp_source_1l00097"/>00097 &#32;&#32;&#32;&#32;<emphasis role="keywordflow">else</emphasis>&#32;{
<anchor xml:id="_solve_root_8cpp_source_1l00098"/>00098 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;*x2&#32;=&#32;(-b&#32;-&#32;sqd)&#32;/&#32;(2&#32;*&#32;a);
<anchor xml:id="_solve_root_8cpp_source_1l00099"/>00099 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">if</emphasis>&#32;(<link linkend="_solve_root_8cpp_1aa183967a7a915749e9800658481403e8">isZero</link>(*x2))&#32;*x2&#32;=&#32;0;
<anchor xml:id="_solve_root_8cpp_source_1l00100"/>00100 &#32;&#32;&#32;&#32;&#32;&#32;&#32;&#32;<emphasis role="keywordflow">return</emphasis>&#32;<link linkend="_consts_8h_1a34f6126547cfdaeca6fb82d45a97692aaeb742e0fd9a627c1b225628bbe85bc2e">twoRoot</link>;
<anchor xml:id="_solve_root_8cpp_source_1l00101"/>00101 &#32;&#32;&#32;&#32;}
<anchor xml:id="_solve_root_8cpp_source_1l00102"/>00102 
<anchor xml:id="_solve_root_8cpp_source_1l00103"/>00103 }
</programlisting></section>
